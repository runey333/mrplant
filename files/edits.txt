//INITIALIZE AND ADD BLE SERVICE

preamble {=
    #include "simple_ble.h"

    // Data structures needed for BLE.
    // See https://github.com/lab11/nrf52x-base/blob/master/lib/simple_ble/README.md

    // BLE Configuration specifies the MAC address and
    // intervals for advertising and connections.
    static simple_ble_config_t ble_config = {
            // MAC address: c0:98:e5:49:xx:xx
            // where the last two octets are given by the device_id below.
            .platform_id       = 0x49,   // The 4th octet in device BLE address.
            .device_id         = 0xAABB, // TODO: replace with your lab bench number
            .adv_name          = "ROMI", // used in advertisements if there is room
            .adv_interval      = MSEC_TO_UNITS(100, UNIT_0_625_MS),
            .min_conn_interval = MSEC_TO_UNITS(100, UNIT_1_25_MS),
            .max_conn_interval = MSEC_TO_UNITS(200, UNIT_1_25_MS),
    };

    // Specify a unique ID for the ROMI service.
    // UUID: 79 0a 19 15 62 84 4d 1a 95 7d 23 be 70 84 70 bb

    static simple_ble_service_t romi_service = {{
        .uuid128 = {0xbb,0x70,0x84,0x70,0xbe,0x23,0x7d,0x95,
                    0x1a,0x4d,0x84,0x62,0x15,0x19,0x0a,0x79}
    }};

    // Characteristic reflecting key presses.
    // The characteristic is identified within the service by a 16-bit unique ID.
    static simple_ble_char_t key_state_characteristic = {.uuid16 = 0xda05};
=}

static uint16_t moisture;

simple_ble_add_characteristic(1, 1, 0, 0, // read, write, notify, vlen
      sizeof(moisture), (uint8_t*)&moisture,
      &romi_service, &key_state_characteristic);


reactor ArrowKeys(period:time(100 ms)) {
    timer t(0, period);

    reaction(startup) {=
        // Set up BLE.
        // See https://github.com/lab11/nrf52x-base/blob/master/lib/simple_ble/README.md

        // Your code goes here. --> PUT ADVERTISEMENT CODE HERE
    =}

    reaction(t) -> up, down, left, right {=
        lf_set(moisture, found_level) --> MODIFY LAB CODE
    =}
}
